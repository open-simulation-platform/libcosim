<!--

<VariableGroups>
  - Has a collection of <VariableGroup> elements

<VariableGroup>
  - Has a collection of <Variable> elements
  - Has attribute 'type' which is a type defined in the ontology (force, velocity, pressure, etc)
  - Has attribute 'name' which is an arbitrary name used when referring to the given <VariableGroup>
    in a <VariableGroupContainment> element in OspModelDescription.xml or <VariableGroupConnection>
    element in OspSystemStructure.xml

<Variable>
  - Has a 'name' attribute which must match with the name of the <ScalarVariable> element in 
    modelDescription.xml it is supposed to represent
  - The unit will also be defined for each <Variable>. Format still not decided but some examples
    are given below in <VariableGroup> 'B'

<VariableGroupContainments>
  - Has a collection of <VariableGroupContainment> elements
 
<VariableGroupContainment>
  - Has attribute 'group' which referes to a <VariableGroup> by its 'name' attribute
  - Has attribute 'contains' which referes to a <VariableGroup> by its 'name' attribute  
  
  These elements describe the containment relationships between the <VariableGroup> elements.
  Not decided on the name of this element or its attributes. We separated this information out
  from the <VariableGroup> elements, because it enables the possibility to use <VariableGroup>
  elements in connections WITHOUT their containments. E.g: If <VariableGroup> 'A' defines that
  it contains <VariableGroup> 'B', INSIDE the <VariableGroup> element, it would not be possible
  to use <VariableGroup> 'A' in a connection, without also including <VariableGroup> 'B'.

<VariableGroupConnections>
  - Has a collection of <VariableGroupConnection> elements

<VariableGroupConnection>
  - Has exactly one <VariableGroupA> element
  - Has exactly one <VariableGroupB> element
  
  Specifies that <VariableGroupA> and <VariableGroupB> are connected

<VariableGroupA>
  - Has attribute 'simulator' which referes to the 'name' attribute of a defined <Simulator>
    element in OspSystemStructure.xml
  - Has attribute 'name' which referes to the 'name' attribute of the <VariableGroup> element 
    defined in the OspModelDescription.xml which describes the <Simulator> refered to by the 
    'simulator' attribute

<VariableGroupB>
  - Has attribute 'simulator' which referes to the 'name' attribute of a defined <Simulator>
    element in OspSystemStructure.xml
  - Has attribute 'name' which referes to the 'name' attribute of the <VariableGroup> element 
    defined in the OspModelDescription.xml which describes the <Simulator> refered to by the 
    'simulator' attribute
-->

<MSMI>

    <OspModelDescription>
        <VariableGroups>

            <VariableGroup type="A" name="A">
                <Variable name="V1"/>
            </VariableGroup>

            <VariableGroup type="B" name="B">
                <Variable name="V2" dimension="Force" factor="60"/>
                <Variable name="V3" baseUnit="N" factor="60"/>
                <Variable name="V4" dimension="Force" baseUnit="N" factor="60"/>
                <Variable name="V5" unit="[kg]*[m]*[s]^(-2)*[s]^(2)"/>
                <Variable name="V6" unit="[kg]*[m]"/>
                <Variable name="V6" unit="[kg]*[1000*m]"/>
                <Variable name="V7"/>
            </VariableGroup>

            <VariableGroup type="C" name="C">
                <Variable name="V8"/>
            </VariableGroup>

            <VariableGroup type="D" name="D">
                <Variable name="V9"/>
            </VariableGroup>

        </VariableGroups>

        <VariableGroupContainments>

            <VariableGroupContainment group="A" contains="B"/>
            <VariableGroupContainment group="A" contains="C"/>
            <VariableGroupContainment group="B" contains="D"/>

        </VariableGroupContainments>
    </OspModelDescription>

    <!--  OspSystemStructure.xml -->
    <OspSystemStructure>
        <Functions>
            <!-- Function Switch -->
            <Function type="Switch" name="mySwitch">
                <Signals>
                    <Signal type="boolean" causality="input" name="predicate"/>
                    <Signal type="real" causality="input" name="true"/>
                    <Signal type="real" causality="input" name="false"/>
                    <Signal type="real" causality="output" name="result"/>
                </Signals>
            </Function>

            <!-- Function Switch vector -->
            <Function type="VectorSwitch" name="myVecSwitch">
                <Signals>
                    <!-- Should these use same elements as in FMI: ScalarVariable -->
                    <Signal type="boolean" causality="input" name="predicate"/>
                    <Signal type="real" causality="input" name="true[0]"/>
                    <Signal type="real" causality="input" name="true[1]"/>
                    <Signal type="real" causality="input" name="false[0]"/>
                    <Signal type="real" causality="input" name="false[1]"/>
                    <Signal type="real" causality="output" name="result[0]"/>
                    <Signal type="real" causality="output" name="result[1]"/>
                </Signals>
                <SignalGroups>
                    <SignalGroup name="true">
                        <Signal name="true[0]"/>
                        <Signal name="true[1]"/>
                    </SignalGroup>
                    <SignalGroup name="false">
                        <Signal name="false[0]"/>
                        <Signal name="false[1]"/>
                    </SignalGroup>
                    <SignalGroup name="result">
                        <Signal name="result[0]"/>
                        <Signal name="result[1]"/>
                    </SignalGroup>
                </SignalGroups>
            </Function>

            <!-- Function Sum scalar -->
            <Function type="Sum" name="mySummation">
                <Signals>
                    <Signal type="real" causality="input" name="in1"/>
                    <Signal type="real" causality="input" name="in2"/>
                    <Signal type="real" causality="output" name="out"/>
                </Signals>
            </Function>

            <!-- Function Sum vector -->
            <Function type="Sum" name="myVecSummation">
                <Signals>
                    <Signal type="real" causality="input" name="in1[0]"/>
                    <Signal type="real" causality="input" name="in1[1]"/>
                    <Signal type="real" causality="input" name="in2[0]"/>
                    <Signal type="real" causality="input" name="in2[1]"/>
                    <Signal type="real" causality="output" name="out[0]"/>
                    <Signal type="real" causality="output" name="out[1]"/>
                </Signals>
                <SignalGroups>
                    <SignalGroup name="in1">
                        <Signal name="in1[0]"/>
                        <Signal name="in1[1]"/>
                    </SignalGroup>
                    <SignalGroup name="in2">
                        <Signal name="in2[0]"/>
                        <Signal name="in2[1]"/>
                    </SignalGroup>
                    <SignalGroup name="out">
                        <Signal name="out[0]"/>
                        <Signal name="out[1]"/>
                    </SignalGroup>
                </SignalGroups>
            </Function>

            <!-- Function linear transformation scalar -->
            <Function type="LinearTransformation" name="myScaling">
                <!-- A linear transformation is parameterized -->
                <Parameters>
                    <Parameter name="factor" type="real" value="0.1"/>  <!-- Key, Value -->
                    <Parameter name="offset" type="real" value="123.4"/>
                </Parameters>
                <Signals>
                    <Signal type="real" causality="input" name="in"/>
                    <Signal type="real" causality="output" name="out"/>
                </Signals>
            </Function>

            <!-- Function linear transformation vector -->
            <Function type="LinearTransformation" name="myVectorScaling">
                <Parameters>
                    <Parameter name="factor" value="0.1"/>
                    <Parameter name="offset" value="123.4"/>
                </Parameters>
                <Signals>
                    <Signal type="real" causality="input" name="in[0]"/>
                    <Signal type="real" causality="input" name="in[1]"/>
                    <Signal type="real" causality="output" name="out[0]"/>
                    <Signal type="real" causality="output" name="out[1]"/>
                </Signals>
                <SignalGroups>
                    <SignalGroup name="in">
                        <Signal name="in[0]"/>
                        <Signal name="in[1]"/>
                    </SignalGroup>
                    <SignalGroup name="out">
                        <Signal name="out[0]"/>
                        <Signal name="out[1]"/>
                    </SignalGroup>
                </SignalGroups>
            </Function>

            <!-- Function matrix multiplication vector -->
            <Function type="StaticMatrixTransformation" name="myStaticMatrixMultiplication">
                <Parameters>
                    <Parameter name="x0" value="0.0"/>
                    <Parameter name="x1" value="-1.0"/>
                    <Parameter name="y0" value="1.0"/>
                    <Parameter name="y1" value="0.0"/>
                </Parameters>
                <Signals>
                    <Signal type="real" causality="input" name="in[0]"/>
                    <Signal type="real" causality="input" name="in[1]"/>
                    <Signal type="real" causality="output" name="out[0]"/>
                    <Signal type="real" causality="output" name="out[1]"/>
                </Signals>
                <SignalGroups>
                    <SignalGroup name="in">
                        <Signal name="in[0]"/>
                        <Signal name="in[1]"/>
                    </SignalGroup>
                    <SignalGroup name="out">
                        <Signal name="out[0]"/>
                        <Signal name="out[1]"/>
                    </SignalGroup>
                </SignalGroups>
            </Function>
        </Functions>

        <!--
            - LinearTransformation as Function?
            - Consider naming of xml elements
              Do connections to/from functions have special names?
              Signal name or id or reference?
            - Evaluate how far we are from ssp. Will it at some point make sense to "merge"?
              IE, can a function be set ut as a Component/Element?
        -->

        <Connections>

            <!-- Linear transformation - obsolete
            <VariableConnection>
                <Variable simulator="simA" name="out"/>
                <Variable simulator="simB" name="in"/>
                <LinearTransformation factor="0.1" offset="6669"/>
            </VariableConnection>
            -->

            <!-- Linear transformation as function -->
            <VariableConnection>
                <Variable simulator="SimA" name="out"/>
                <Signal function="myScaling" name="in"/>
            </VariableConnection>

            <VariableConnection>
                <Signal function="myScaling" name="out"/>
                <Variable simulator="SimB" name="in"/>
            </VariableConnection>


            <VariableGroupConnection>
                <VariableGroup simulator="simA" name="A"/>
                <SignalGroup function="myStaticMatrixMultiplication" name="in"/>
            </VariableGroupConnection>

            <VariableGroupConnection>
                <SignalGroup function="myStaticMatrixMultiplication" name="out"/>
                <VariableGroup simulator="simB" name="B"/>
            </VariableGroupConnection>

            <VariableGroupConnection>
                <VariableGroup simulator="simA" name="A"/>
                <VariableGroup simulator="simB" name="B"/>
            </VariableGroupConnection>

            <!-- Function Switch -->
            <VariableConnection>
                <Variable simulator="simA" name="out"/>
                <Signal function="mySwitch" name="predicate"/>
            </VariableConnection>
            <VariableConnection>
                <Variable simulator="simB" name="out"/>
                <Signal function="mySwitch" name="true"/>
            </VariableConnection>
            <VariableConnection>
                <Variable simulator="simC" name="out"/>
                <Signal function="mySwitch" name="false"/>
            </VariableConnection>
            <VariableConnection>
                <Signal function="mySwitch" name="result"/>
                <Variable simulator="simD" name="in"/>
            </VariableConnection>

            <VariableConnection>
                <Variable simulator="simA" name="out"/>
                <Signal function="mySummation" name="0"/>
            </VariableConnection>
            <VariableConnection>
                <Variable simulator="simB" name="out"/>
                <Signal function="mySummation" name="in2"/>
            </VariableConnection>
            <VariableConnection>
                <Signal function="mySummation" name="out"/>
                <Variable simulator="simC" name="in"/>
            </VariableConnection>
            <VariableConnection>
                <Variable simulator="simA" name="out"/>
                <Signal function="mySummation" name="in1"/>
            </VariableConnection>

            <VariableGroupConnection>
                <SignalGroup function="myVecSummation" name="in1"/>
                <VariableGroup simulator="simA" name="outVec"/>
            </VariableGroupConnection>
            <VariableGroupConnection>
                <SignalGroup function="myVecSummation" name="in2"/>
                <VariableGroup simulator="simB" name="outVec"/>
            </VariableGroupConnection>
            <VariableGroupConnection>
                <SignalGroup function="myVecSummation" name="out"/>
                <VariableGroup simulator="simC" name="inVec"/>
            </VariableGroupConnection>
        </Connections>
    </OspSystemStructure>
</MSMI>