name: libcosim CI CMake

# This workflow is triggered on pushes to the repository.
on: [push]

env:
  CONAN_LOGIN_USERNAME_OSP: ${{ secrets.osp_conan_usr }}
  CONAN_PASSWORD_OSP: ${{ secrets.osp_conan_pwd }}
  CONAN_REVISIONS_ENABLED: 1
  CONAN_NON_INTERACTIVE: True

jobs:
  cmake-on-linux:
    name: CMake
    runs-on: ${{ matrix.os }}
    env:
      CC: gcc-${{ matrix.compiler_version }}
      CXX: g++-${{ matrix.compiler_version }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04]
        build_type: [Debug, Release]
        compiler_version: [7]
        #option_fmuproxy: ['fmuproxy=True', 'fmuproxy=False']

    steps:
      - uses: actions/checkout@v2
      - name: Install prerequisites
        run: |
          sudo pip3 install --upgrade setuptools pip
          sudo pip3 install conan
          sudo apt-get install -y --no-install-recommends \
            doxygen \
            libmsgsl-dev \
            libyaml-cpp-dev \
            libxerces-c-dev \
            libxerces-c3.2
          conan remote add osp https://osp-conan.azurewebsites.net/artifactory/api/conan/public --force
          conan install fmilibrary/2.0.3@ -s build_type=${{ matrix.build_type }} -s compiler.libcxx=libstdc++11 -g deploy
      - run: |
          cmake \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DBOOST_ROOT=$BOOST_ROOT_1_69_0 \
            -DBoost_ADDITIONAL_VERSIONS=1.69.0 \
            -DBoost_ARCHITECTURE=-x64 \
            -DCMAKE_PREFIX_PATH=fmilibrary \
            -B build

          cmake --build build
          ctest build

  cmake-on-windows:
    name: CMake
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2016]
        build_type: [Debug, Release]
        #option_fmuproxy: ['fmuproxy=True', 'fmuproxy=False']

    steps:
      - uses: actions/checkout@v2
      - run: |
          cmake -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -A x64 -B build
          cmake --build build --config ${{ matrix.build_type }}
          ctest build
        shell: bash
