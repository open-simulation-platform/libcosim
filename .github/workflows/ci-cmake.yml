name: libcosim CI CMake

# This workflow is triggered on pushes to the repository.
on: [push]

env:
  CONAN_LOGIN_USERNAME_OSP: ${{ secrets.osp_conan_usr }}
  CONAN_PASSWORD_OSP: ${{ secrets.osp_conan_pwd }}
  CONAN_REVISIONS_ENABLED: 1
  CONAN_NON_INTERACTIVE: True

jobs:
  cmake-on-linux:
    name: CMake
    runs-on: ${{ matrix.os }}
    env:
      CC: gcc-${{ matrix.compiler_version }}
      CXX: g++-${{ matrix.compiler_version }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04]
        build_type: [Debug, Release]
        compiler_version: [7]

    steps:
      - uses: actions/checkout@v2
      - name: Install prerequisites
        run: |
          sudo apt-get install -y --no-install-recommends \
            doxygen \
            libboost-all-dev \
            libmsgsl-dev \
            libyaml-cpp-dev \
            libxerces-c-dev \
            libzip-dev
          wget \
              "https://github.com/viproma/debian-fmilib/releases/download/debian%2F2.0.3-1/libfmilib2_2.0.3-1_amd64.deb" \
              "https://github.com/viproma/debian-fmilib/releases/download/debian%2F2.0.3-1/libfmilib2-dev_2.0.3-1_amd64.deb"
          sudo dpkg -i libfmilib2_2.0.3-1_amd64.deb libfmilib2-dev_2.0.3-1_amd64.deb
      - name: CMake - configure
        run: |
          cmake \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DCMAKE_PREFIX_PATH=fmilibrary \
            -B build
      - name: CMake - build
        run: cmake --build build
      - name: CMake - test
        run: |
          cd build
          ctest

  cmake-on-windows:
    name: CMake
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2016]
        build_type: [Debug, Release]

    steps:
      - uses: actions/checkout@v2
      - name: Install prerequisites
        run: |
          pip3 install --upgrade setuptools pip
          pip3 install conan
          choco install doxygen.install
          conan remote add osp https://osp-conan.azurewebsites.net/artifactory/api/conan/public --force
          conan install . -s build_type=${{ matrix.build_type }} -g deploy
      - name: CMake - configure
        shell: bash
        run: |
          cmake . -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -A x64 -DCMAKE_PREFIX_PATH="gsl_microsoft;boost;fmilibrary;libzip;xerces-c;yaml-cpp;bzip2;zlipb" -B build
      - name: CMake - build
        run: cmake --build build --config ${{ matrix.build_type }}
      - name: CMake - test
        run: |
          .\activate_run.ps1
          cd build
          ctest -C ${{ matrix.build_type }}
